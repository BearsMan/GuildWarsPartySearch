name: Build and Push Docker Image

on:
  push:
    branches: [ master ]
    paths:
      - "GuildWarsPartySearch.Common/**"
      - "GuildWarsPartySearch/**"
      - ".github/workflows/docker-deploy.yaml"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Check out the repository
      uses: actions/checkout@v2

    - name: Install .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.x'

    - name: Log in to Docker Hub
      run: |
        docker login --username "${{ secrets.DOCKERHUB_USERNAME }}" --password "${{ secrets.DOCKERHUB_PASSWORD }}"

    - name: Create Docker Environment File
      shell: pwsh
      run: |
        $envFilePath = "envfile"
        $envContent = @(
            "ServerOptions__ApiKey=${{ secrets.APIKEY }}",
            "ServerOptions__Certificate=${{ secrets.CERTIFICATE_BASE64 }}",
            "ApplicationInsights__InstrumentationKey=${{ secrets.AZURE_INSIGHTS_INSTRUMENTATIONKEY }}",
            "AzureCredentialsOptions__ClientSecret=${{ secrets.AZURE_CLIENT_SECRET }}",
            "AzureCredentialsOptions__ClientId=${{ secrets.AZURE_CLIENT_ID }}",
            "AzureCredentialsOptions__TenantId=${{ secrets.AZURE_TENANT_ID }}"
        )
        $envContent | Set-Content -Path $envFilePath
        Write-Host "Environment file created: $envFilePath"

    - name: Set secrets in Web App
      shell: pwsh
      run: |
        az login --service-principal --username "${{ secrets.AZURE_CLIENT_ID }}" --password "${{ secrets.AZURE_CLIENT_SECRET }}" --tenant "${{ secrets.AZURE_TENANT_ID }}"
        az webapp config appsettings set --name guildwarspartysearch --resource-group GuildWarsPartySearch --settings ServerOptions__ApiKey=${{ secrets.APIKEY }}
        az webapp config appsettings set --name guildwarspartysearch --resource-group GuildWarsPartySearch --settings ServerOptions__Certificate=${{ secrets.CERTIFICATE_BASE64 }}
        az webapp config appsettings set --name guildwarspartysearch --resource-group GuildWarsPartySearch --settings ApplicationInsights__InstrumentationKey=${{ secrets.AZURE_INSIGHTS_INSTRUMENTATIONKEY }}
        az webapp config appsettings set --name guildwarspartysearch --resource-group GuildWarsPartySearch --settings AzureCredentialsOptions__ClientSecret=${{ secrets.AZURE_CLIENT_SECRET }}
        az webapp config appsettings set --name guildwarspartysearch --resource-group GuildWarsPartySearch --settings AzureCredentialsOptions__ClientId=${{ secrets.AZURE_CLIENT_ID }}
        az webapp config appsettings set --name guildwarspartysearch --resource-group GuildWarsPartySearch --settings AzureCredentialsOptions__TenantId=${{ secrets.AZURE_TENANT_ID }}
        Write-Host "Secrets placed in Web App"

    - name: Build and push Docker image
      run: |
        cd GuildWarsPartySearch
        .\BuildDockerImage.ps1
        docker push alex4991/guildwarspartysearch.server
      shell: pwsh

    - name: Create Private Key File
      run: |
        cd GuildWarsPartySearch
        $privateKeyContent = "${{ secrets.HOST_KEY }}"
        Set-Content -Path private.key -Value $privateKeyContent
      shell: pwsh

    - name: Set Private Key permissions
      run: |
        cd GuildWarsPartySearch
        chmod 400 private.key
      shell: bash

    - name: Deploy Docker image to host
      shell: pwsh
      run: |
        cd GuildWarsPartySearch
        .\DeployToVM.ps1 -KeyFile private.key -User ${{ secrets.HOST_USER }} -Address ${{ secrets.HOST_ADDRESS }} -PathToEnvFileFolder .